// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAttendence;

#nullable disable

namespace StudentAttendence.Migrations
{
    [DbContext(typeof(TrainingDbContext))]
    partial class TrainingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StudentAttendence.CCCC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CCCCId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CourseFees")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cccc");
                });

            modelBuilder.Entity("StudentAttendence.ClassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("ToTalClass")
                        .HasColumnType("int");

                    b.Property<string>("Weekday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("endTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("startTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CSSSID");

                    b.ToTable("classSchedules");
                });

            modelBuilder.Entity("StudentAttendence.ClassTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CCCCId")
                        .HasColumnType("int");

                    b.Property<int?>("CSSSId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("ToTalClass")
                        .HasColumnType("int");

                    b.Property<DateTime>("endDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CCCCId");

                    b.HasIndex("CSSSId");

                    b.HasIndex("CourseId");

                    b.ToTable("classTimes");
                });

            modelBuilder.Entity("StudentAttendence.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CourseFees")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("StudentAttendence.CourseStu", b =>
                {
                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("SSSId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CSSSID", "SSSId");

                    b.HasIndex("SSSId");

                    b.ToTable("CourseStu", (string)null);
                });

            modelBuilder.Entity("StudentAttendence.CourseStudd", b =>
                {
                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("SSSId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CSSSID", "SSSId");

                    b.HasIndex("SSSId");

                    b.ToTable("CourseStudd", (string)null);
                });

            modelBuilder.Entity("StudentAttendence.CourseStudent", b =>
                {
                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("SSSId")
                        .HasColumnType("int");

                    b.HasKey("CSSSID", "SSSId");

                    b.HasIndex("SSSId");

                    b.ToTable("CourseStudent", (string)null);
                });

            modelBuilder.Entity("StudentAttendence.CourseTeacher", b =>
                {
                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("TTTTTId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CSSSID", "TTTTTId");

                    b.HasIndex("TTTTTId");

                    b.ToTable("CourseTeachers", (string)null);
                });

            modelBuilder.Entity("StudentAttendence.CSSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CCCCId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CourseFees")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("csss");
                });

            modelBuilder.Entity("StudentAttendence.SSS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SsssId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ssss");
                });

            modelBuilder.Entity("StudentAttendence.StuCourse", b =>
                {
                    b.Property<int>("CSSSID")
                        .HasColumnType("int");

                    b.Property<int>("SSSId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("sSSSId")
                        .HasColumnType("int");

                    b.HasKey("CSSSID", "SSSId");

                    b.HasIndex("sSSSId");

                    b.ToTable("StuCourses", (string)null);
                });

            modelBuilder.Entity("StudentAttendence.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CCCCId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CCCCId");

                    b.HasIndex("CourseId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("StudentAttendence.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CCCCId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CCCCId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentAttendence.TTTTT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CSSSId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CSSSId");

                    b.ToTable("tttt");
                });

            modelBuilder.Entity("StudentAttendence.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TTTTTId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VVVVVId")
                        .HasColumnType("int");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TTTTTId");

                    b.HasIndex("VVVVVId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudentAttendence.VVVVV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CSSSId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("vvvvId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CSSSId");

                    b.ToTable("vvvvv");
                });

            modelBuilder.Entity("StudentAttendence.ClassSchedule", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");
                });

            modelBuilder.Entity("StudentAttendence.ClassTime", b =>
                {
                    b.HasOne("StudentAttendence.CCCC", null)
                        .WithMany("classTimes")
                        .HasForeignKey("CCCCId");

                    b.HasOne("StudentAttendence.CSSS", null)
                        .WithMany("classTimes")
                        .HasForeignKey("CSSSId");

                    b.HasOne("StudentAttendence.Course", "Course")
                        .WithMany("classTimes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("StudentAttendence.CourseStu", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAttendence.SSS", "sSSS")
                        .WithMany()
                        .HasForeignKey("SSSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");

                    b.Navigation("sSSS");
                });

            modelBuilder.Entity("StudentAttendence.CourseStudd", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAttendence.SSS", "sSSS")
                        .WithMany()
                        .HasForeignKey("SSSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");

                    b.Navigation("sSSS");
                });

            modelBuilder.Entity("StudentAttendence.CourseStudent", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAttendence.SSS", "sSSS")
                        .WithMany()
                        .HasForeignKey("SSSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");

                    b.Navigation("sSSS");
                });

            modelBuilder.Entity("StudentAttendence.CourseTeacher", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAttendence.TTTTT", "tTTTT")
                        .WithMany()
                        .HasForeignKey("TTTTTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");

                    b.Navigation("tTTTT");
                });

            modelBuilder.Entity("StudentAttendence.StuCourse", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", "cSSS")
                        .WithMany()
                        .HasForeignKey("CSSSID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentAttendence.VVVVV", "sSSS")
                        .WithMany()
                        .HasForeignKey("sSSSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cSSS");

                    b.Navigation("sSSS");
                });

            modelBuilder.Entity("StudentAttendence.Student", b =>
                {
                    b.HasOne("StudentAttendence.CCCC", null)
                        .WithMany("student")
                        .HasForeignKey("CCCCId");

                    b.HasOne("StudentAttendence.Course", null)
                        .WithMany("student")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("StudentAttendence.Teacher", b =>
                {
                    b.HasOne("StudentAttendence.CCCC", null)
                        .WithMany("teacher")
                        .HasForeignKey("CCCCId");

                    b.HasOne("StudentAttendence.Course", null)
                        .WithMany("teacher")
                        .HasForeignKey("CourseId");

                    b.HasOne("StudentAttendence.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("StudentAttendence.TTTTT", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", null)
                        .WithMany("teacher")
                        .HasForeignKey("CSSSId");
                });

            modelBuilder.Entity("StudentAttendence.User", b =>
                {
                    b.HasOne("StudentAttendence.TTTTT", null)
                        .WithMany("user")
                        .HasForeignKey("TTTTTId");

                    b.HasOne("StudentAttendence.VVVVV", null)
                        .WithMany("user")
                        .HasForeignKey("VVVVVId");
                });

            modelBuilder.Entity("StudentAttendence.VVVVV", b =>
                {
                    b.HasOne("StudentAttendence.CSSS", null)
                        .WithMany("student")
                        .HasForeignKey("CSSSId");
                });

            modelBuilder.Entity("StudentAttendence.CCCC", b =>
                {
                    b.Navigation("classTimes");

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("StudentAttendence.Course", b =>
                {
                    b.Navigation("classTimes");

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("StudentAttendence.CSSS", b =>
                {
                    b.Navigation("classTimes");

                    b.Navigation("student");

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("StudentAttendence.TTTTT", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("StudentAttendence.VVVVV", b =>
                {
                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
